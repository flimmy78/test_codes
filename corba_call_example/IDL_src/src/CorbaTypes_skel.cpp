// This file is generated by omniidl (C++ backend)- omniORB_4_0. Do not edit.

#include "CorbaTypes.h"
#include <omniORB4/tcDescriptor.h>

OMNI_USING_NAMESPACE(omni)

static const char* _0RL_dyn_library_version = omniORB_4_0;

static const char* _0RL_enumMember_Base__Bus_mCorbaTypes_mEDatapointAlarm[] = { "NoAlarm", "OverScaleHighAlarm", "OverScaleLowAlarm", "VeryHighAlarm", "HighAlarm", "LowAlarm", "VeryLowAlarm", "TrueAlarm", "FalseAlarm", "GeneralAlarm" };
static CORBA::TypeCode_ptr _0RL_tc_Base__Bus_mCorbaTypes_mEDatapointAlarm = CORBA::TypeCode::PR_enum_tc("IDL:Base_Bus/CorbaTypes/EDatapointAlarm:1.0", "EDatapointAlarm", _0RL_enumMember_Base__Bus_mCorbaTypes_mEDatapointAlarm, 10);
#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Base_Bus { namespace CorbaTypes { 
  const CORBA::TypeCode_ptr _tc_EDatapointAlarm = _0RL_tc_Base__Bus_mCorbaTypes_mEDatapointAlarm;
} } 
#else
const CORBA::TypeCode_ptr Base_Bus::CorbaTypes::_tc_EDatapointAlarm = _0RL_tc_Base__Bus_mCorbaTypes_mEDatapointAlarm;
#endif

void _0RL_buildDesc_cBase__Bus_mCorbaTypes_mEDatapointAlarm(tcDescriptor& _desc, const Base_Bus::CorbaTypes::EDatapointAlarm& _data)
{
  _desc.p_enum.data = (void*)&_data;
  _desc.p_enum.size = sizeof(_data);
}

void operator<<=(CORBA::Any& _a, Base_Bus::CorbaTypes::EDatapointAlarm _s)
{
  tcDescriptor _0RL_tcd;
  _0RL_buildDesc_cBase__Bus_mCorbaTypes_mEDatapointAlarm(_0RL_tcd, _s);
  _a.PR_packFrom(_0RL_tc_Base__Bus_mCorbaTypes_mEDatapointAlarm, &_0RL_tcd);
}

CORBA::Boolean operator>>=(const CORBA::Any& _a, Base_Bus::CorbaTypes::EDatapointAlarm& _s)
{
  tcDescriptor _0RL_tcd;
  _0RL_buildDesc_cBase__Bus_mCorbaTypes_mEDatapointAlarm(_0RL_tcd, _s);
  return _a.PR_unpackTo(_0RL_tc_Base__Bus_mCorbaTypes_mEDatapointAlarm, &_0RL_tcd);
}

